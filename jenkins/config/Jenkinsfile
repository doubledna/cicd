node("test") {
    def cicdRepo="git@github.com:doubledna/cicd.git"
    def businessRepo="git@github.com:wujieliyanxia/config.git"
    def mvnCmd="/usr/local/maven/bin/mvn"
    // def imageTag="master-${BUILD_TIMESTAMP}"
    def imageTag="master-${BUILD_TIMESTAMP}"
    def serviceName="config"
    def jarName="config-0.0.1-SNAPSHOT"

    echo "开始构建：${serviceName} 分支：main Jenkins节点：test"

    stage('拉取cicd代码'){
        git branch: "main", url: "${cicdRepo}"
    }

    stage('拉取业务代码') {
        dir("master") {
            git branch: "main", url: "${businessRepo}"
        }
    }
    
    // withEnv(['PATH=/usr/local/maven/bin/:/usr/local/java/jdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin']) {
    //     stage('MVN打包') {
    //         dir("master") {
    //             sh "${mvnCmd} clean package -Pdev -Dmaven.test.skip=true -am"
    //         }
    //     }
    // }

    stage("拷贝jar包") {
        dir("master") {
            sh "cp -rf target/${jarName}.jar ../jenkins/${serviceName}/build.jar"
        }
    }

    stage("构建镜像") {
        dir("jenkins/${serviceName}") {
            sh "docker build -t ${serviceName}:${imageTag} ."
        }
    }

    stage("停止旧服务") {
        try {
            sh "docker stop ${serviceName}"
        } catch(err) {
            echo "服务停止失败，原因：${err}"
        }
    }

    stage("删除旧服务") {
        try {
            sh "docker rm ${serviceName}"
        } catch(err) {
            echo "服务停止失败，原因：${err}"
        }
    }

    stage("部署服务") {
        sh "docker run -d --name ${serviceName} -p 8888:8888 ${serviceName}:${imageTag}"
    }
}